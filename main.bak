#lang racket
(require "utility.rkt")
(require "parse.rkt")
(require "process.rkt")

(define var_env
  '(((a 1) (b 2) (c 3)))
  )

 

(define code '(assign x 10))




;(define code '(when (< a 5) (out a)); repeat print a 5 times
;parse ->(when-exp (bool-exp < a 5) (block-exp (output-exp (var-exp a)) ...

(define parsed (parse code))

;parsed
;(process parsed var_env)

(combine '((a b c) (x y z) (m o)))